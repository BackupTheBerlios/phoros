#+TITLE:     Phoros
#+AUTHOR:    Bert Burgemeister
#+EMAIL:     trebbu@googlemail.com
#+DESCRIPTION:
#+KEYWORDS: 
#+LANGUAGE:  en
#+OPTIONS:   H:3 num:nil toc:1 \n:nil @:t ::t |:t ^:t -:t f:t *:t <:t
#+OPTIONS:   TeX:nil LaTeX:nil skip:nil d:nil todo:t pri:nil tags:not-in-toc
#+OPTIONS:   author:t email:t creator:nil timestamp:t
#+STYLE:     <link rel="stylesheet" href="style.css" type="text/css"/>

#+ATTR_HTML: alt="Phoros logo" height="50" style="padding-top:.5em;float:right"
  [[file:phoros-logo-plain.png]]

A Tool for Photogrammetric Road Survey

* Workflow

  - Images and GPS data are acquired using a measuring vehicle.
    ([[http://tu-dresden.de/die_tu_dresden/fakultaeten/vkw/ivs/gsa/professur/ausstattung/messfahrzeug_uno][Here]]
    is a working example.)

    Sequences of a few hundred images together with their trigger
    times are stored Huffman-encoded in files called =*.pictures=.
    GPS data is preprocessed into a table of ASCII text.  The format
    of both image and GPS files is not (yet) explained here.

  - Cameras and GPS system need to be calibrated, which is not
    explained here.

  - Calibration parameters are stored into the database using the
    [[Command Line Interface]] (There, cf.
    =Camera Hardware Parameters= through
    =Camera Calibration Parameters=.)

  - GPS data and image information are fed into the database using
    option =--store-images-and-points= of the [[Command Line Interface]].

  - Presentation project users use the web interface to point in a map
    at a point of interest and are shown a couple of relevant images.
    In these images they point at features of interest the coordinates
    of which can be stored into the database.  (Storage not yet
    implemented; coordinates are just shown.)

* Command Line Interface

  The command line interface is used to

  - initialize a fresh PostgreSQL database
    (=./phoros --create-sys-tables ...=),

  - set up and manage acquisition projects
    (=./phoros --create-acquisition-project ...=),

  - store camera calibration parameters (=--store-camera-hardware=,
    =--store-device-stage-of-life=, =--store-camera-calibration= etc.),

  - store measurement data, i.e., images and GPS positions
    (=./phoros --store-images-and-points ...=),

  - manage presentation projects and presentation project users
    (=--create-presentation-project=, =--create-user= etc.),

  - start Phoros as a presentation server (a web server presenting
    measurement data to presentation project users) by
    =./phoros --server ...=.

  #+BEGIN_SRC sh
  $ ./phoros --help
  #+END_SRC
  emits a rather comprehensive [[file:phoros--help.org][help message]].

* Web Interface

  Once images, calibration data and definitions of users and projects
  have been stored using the [[Command Line Interface]], Phoros can be
  started as a web server:
#+BEGIN_SRC: sh
$ ./phoros --server \
>          --common-root=/some_path/where_i_put/my_raw_images/ \
>          --host=my_server --port=5432 --database=my_projects \
>          --user=database_admin --password=SeCrEt
#+END_SRC:
  A user can than point their browser at Phoros' URL.  Example:
  =http://localhost:8080/phoros/beautiful-cities= connects to
  presentation project =beautiful-cities= (and asks for username and
  password).

** Choose a point from the map
   In the map, small yellow circles represent points of view of the
   available images.  Pointing into an area of interest has Phoros
   select and display a few[fn:: The number of images can be specified
   during server start. Example: @<code>phoros --server --images=N
   ... @</code>] images containing the point clicked, which on the
   streetmap is represented by the dark blue Phoros logo.

   #+ATTR_HTML: style="border:2px solid darkgrey"
   [[file:phoros-12.8.1.png]]

** Point into first image
   After zooming into a first image and selecting a feature of
   interest, [[http://en.wikipedia.org/wiki/Epipolar_line#Epipolar_line][epipolar lines]] appear in the other images which may be
   helpful in recognising the selected feature there.

   Points selected in images are represented by large yellow circles.
   
** Point into second image
   Zooming in and selecting the same feature in a second image
   triggers calculation of the estimated global position.  The
   estimated position is now shown as a cyan circle in all images and
   in the map.  Neither estimated position accuracy nor pointing
   precision are bounded by pixel size.
   
** Improve accuracy
   Zooming in and pointing at the feature in some (or all) of the
   remaining images improves accuracy.

** Store point
   Finishing this point means storing it in a dedicated user point
   table.
   
* Deployment
  [[file:deployment.org][Example scripts]]

* Licence

  PHOROS -- Photogrammetric Road Survey

  Copyright (C) 2010, 2011, 2012 [[mailto:Bert Burgemeister <trebbu@googlemail.com>][Bert Burgemeister]]

  This program is free software; you can redistribute it and/or modify
  it under the terms of the GNU General Public License as published by
  the Free Software Foundation; either [[http://www.gnu.org/licenses/gpl-2.0.html][version 2 of the License]], or
  (at your option) any later version.

  This program is distributed in the hope that it will be useful, but
  WITHOUT ANY WARRANTY; without even the implied warranty of
  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
  General Public License for more details.

  You should have received a copy of the GNU General Public License
  along with this program; if not, write to the Free Software
  Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA
  02110-1301 USA.

* Download

  - Browse Phoros source code via gitweb at [[http://github.com/trebb/phoros][Github]].

  - Browse source code of [[mailto:Steffen.Scheller.home@gmail.com][Steffen Scheller]]'s [[http://github.com/trebb/phoml][PhoML]] library, which is
    needed by Phoros.

  - Get everything:
    #+BEGIN_SRC sh
    $ git clone git://github.com/trebb/phoros.git
    $ cd phoros
    $ git submodule init
    $ git submodule update
    #+END_SRC

    The build process isn't perfect yet.  You'll (probably) need an
    x86-64 Debian system with [[http://beta.quicklisp.org][Quicklisp]] installed on top of [[http://www.sbcl.org][SBCL]].

* Acknowledgements

  - Phoros is implemented using [[http://sbcl.org][Steel Bank Common Lisp]], a Common Lisp
    implementation.

  - Communication with [[http://postgresql.org][PostgreSQL]] is provided by [[http://marijnhaverbeke.nl/postmodern/][Postmodern]].

  - The presentation server is based on [[http://weitz.de/hunchentoot][Hunchentoot]].

  - Almost everything visible in the web browser looks as it does
    thanks to the [[http://openlayers.org][OpenLayers]] library, interfaced by [[http://common-lisp.net/project/parenscript/][Parenscript]] and
    [[http://common-lisp.net/project/cl-json/][CL-JSON]].

  - Without [[mailto:Steffen.Scheller.home@gmail.com][Steffen Scheller]]'s photogrammetric library [[http://github.com/trebb/phoml][PhoML]] Phoros'
    presentation server couldn't do much beyond displaying
    geolocated images. 

  - Once decoded, images are turned into something a web browser can
    handle by [[http://www.xach.com/lisp/zpng/][ZPNG]].

  - Leap second information is taken from the [[http://hpiers.obspm.fr/eop-pc][Earth Orientation Center]].

  - [[http://www.openstreetmap.org][OpenStreetMap]] provides the map.  (Other map services can be used
    as well, though.)

